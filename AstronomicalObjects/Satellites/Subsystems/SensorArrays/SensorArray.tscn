[gd_scene load_steps=6 format=2]

[ext_resource path="res://AstronomicalObjects/Satellites/Subsystems/SensorArrays/SensorArrayCase.tscn" type="PackedScene" id=1]
[ext_resource path="res://AstronomicalObjects/Satellites/Subsystems/SensorArrays/SensorArray.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded;

vec2 brickTile(vec2 st, float zoom, float time){
    st *= zoom;

    // Here is where the offset is happening
    st.x += step(1., mod(st.y,2.0)) * 0.5;

    return fract(st);
}

vec3 get_color(float time,vec2 uv,vec2 st){
    return vec3(sin(uv.y*uv.x),0.,0.);
}

vec3 box(vec2 st, vec2 size, vec3 color){
    size = vec2(0.2);
    vec2 uv = smoothstep(size,size+vec2(1e-4),st);
    uv *= smoothstep(size,size+vec2(1e-4),vec2(1.0)-st);
    return uv.y*uv.x*color;
}




void fragment(){
    vec2 st = UV;
    st.y *= 3.141*0.05;
    vec3 color = vec3(0.0);
    if(UV.y< 0.5){
        st = brickTile(st,200.,TIME);
        color = box(st*vec2(1.2,1.1),vec2(1.),vec3(0.,1.,1.));
        ALBEDO = color;
    }
    else {
        ALBEDO = vec3(0.,0.,0.);    
    }
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="CylinderMesh" id=3]
top_radius = 1.5
bottom_radius = 1.5
height = 0.499
radial_segments = 128

[node name="Spatial" type="Spatial"]
script = ExtResource( 2 )
speed = 0.956

[node name="Array" type="MeshInstance" parent="."]
transform = Transform( -1.62921e-07, -1, 0, 0.885319, -1.44238e-07, -0.464315, 0.464315, -7.56468e-08, 0.885319, 0, 0, 2 )
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null

[node name="Wing" parent="." instance=ExtResource( 1 )]
