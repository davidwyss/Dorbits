[gd_scene load_steps=5 format=2]

[ext_resource path="res://AstronomicalObjects/Satellites/Subsystems/Lasers/LaserWingCase.tscn" type="PackedScene" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode world_vertex_coords;

uniform float A = 1.; 
uniform float B = 500.; 
uniform float C = 1.; 
uniform float D = 1.; 
uniform float E = 1.; 

vec3 get_color(float time,vec2 uv,vec3 color){
	float xCol = (uv.x - time) * 3.0;
	xCol = mod(xCol, 3.0);
//	vec3 horColor = vec3(.25, 0.25, 0.25);
	vec3 horColor = color;
    horColor = abs(horColor);
	if (xCol < 1.0) {
		horColor.r += 1.0 - xCol;
		horColor.g += xCol;
	}
	else if (xCol < 2.0) {
		xCol -= 1.0;
		horColor.g += 1.0 - xCol;
		horColor.b += xCol;
	}
	else {
		xCol -= 2.0;
		horColor.b += 1.0 - xCol;
		horColor.r += xCol;
	}
    return horColor;
}

void fragment()
{
	vec2 uv = (2.0 * UV) - 1.0;
	float beamWidth = abs(uv.y);
	vec3 horBeam = vec3(beamWidth);
    vec3 color = vec3(0.294, 0.968, 0.976);
    vec3 color2 = vec3(1, 0.019, 0.854);
	ALBEDO.rgb = vec3(mix(horBeam * get_color(TIME,uv,color),horBeam*get_color(TIME,uv,color2),abs(sin(TIME*A+uv.y*B*fract(TIME*C)))));


}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/A = 0.1
shader_param/B = 100.0
shader_param/C = 100.0
shader_param/D = 1.0
shader_param/E = 1.0

[sub_resource type="CylinderMesh" id=3]
top_radius = 0.2
bottom_radius = 2.0
height = 1000.0

[node name="Spatial" type="Spatial"]

[node name="Wing" parent="." instance=ExtResource( 1 )]

[node name="Beam" type="MeshInstance" parent="Wing"]
transform = Transform( 0.25, 0, 0, 0, -4.37114e-08, 0.25, 0, -1, -1.09278e-08, 0, 0, 500 )
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null
